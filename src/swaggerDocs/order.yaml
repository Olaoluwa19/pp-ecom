openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
  description: API endpoints for managing orders

paths:
  /orders:
    get:
      summary: Get all orders
      responses:
        '200':
          description: List of all orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '204':
          description: No orders found

    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Missing required fields
        '500':
          description: Server error

  /orders/{id}:
    get:
      summary: Get a specific order
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: Order ID
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID
        '500':
          description: Server error

  /orders/status:
    put:
      summary: Update order status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                status:
                  type: string
                  enum: [ Pending, Confirmed, Shipped, Delivered, Cancelled ]
      responses:
        '200':
          description: Order status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID or status

  /orders/delete:
    delete:
      summary: Delete an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      responses:
        '200':
          description: Order deleted successfully
        '400':
          description: Invalid ID
        '404':
          description: Order not found
        '500':
          description: Server error

  /orders/sales:
    post:
      summary: Get sales by status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [ Pending, Confirmed, Shipped, Delivered, Cancelled ]
      responses:
        '200':
          description: Total sales for status
        '400':
          description: Invalid status

  /orders/count:
    post:
      summary: Get orders count by status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [ Pending, Confirmed, Shipped, Delivered, Cancelled ]
      responses:
        '200':
          description: Orders count
        '400':
          description: Invalid status
        '500':
          description: Server error

  /orders/user/{userid}:
    get:
      summary: Get user's orders
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: string
        description: User ID
      responses:
        '200':
          description: List of user's orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '204':
          description: No orders found

components:
  schemas:
    Order:
      type: object
      properties:
        _id:
          type: string
        orderItems:
          type: array
          items:
            type: string
        shippingAddress1:
          type: string
        shippingAddress2:
          type: string
        phone:
          type: string
        status:
          type: string
          enum: [ Pending, Confirmed, Shipped, Delivered, Cancelled ]
        totalPrice:
          type: number
        user:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    NewOrder:
      type: object
      required:
      - orderItems
      - shippingAddress1
      - phone
      properties:
        orderItems:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: number
        shippingAddress1:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            country:
              type: string
        shippingAddress2:
          type: object
          properties:
            street:
              type: string
            city:
              type: string
            country:
              type: string
        phone:
          type: string
        user:
          type: string
